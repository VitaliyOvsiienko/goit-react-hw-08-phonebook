{"version":3,"file":"static/js/549.35892842.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts\n      .filter(contact => contact.name.toLowerCase().includes(normalizeFilter))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n);\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport { Box, Button, Container, TextField } from '@mui/material';\nimport { AddLoader } from \"components/Loader\";\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const operation = useSelector(selectIsLoading);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n\n        const newName = contacts.some(contact =>\n                contact.name.toLowerCase() === name.toLowerCase());\n                if (newName) {\n                    toast.error(`${name} is already in contacts`);\n                    return;\n        }\n        if (name === '' || number === '') {\n            toast.error('Fields cannot be empty. Enter some data!');\n            return;\n        }\n        try {\n            await dispatch(addContact({ name: name, number: number })).unwrap();\n            toast.success(`${name} is added to contacts`);\n            form.reset();    \n        } catch (error) {\n            console.log(error)\n        }\n};\n\n    return (\n            <Container maxWidth=\"xs\" sx={{ p: 4, mb: 4,\n                bgcolor: '#ffffff',\n                borderRadius: '10px',\n                boxShadow: 3,\n                }}>\n                <Box component=\"form\"\n                    autoComplete=\"off\"\n                    noValidate\n                    onSubmit={handleSubmit}>\n\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                    name=\"name\"\n                    size=\"small\"\n                    />\n\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        type=\"tel\"\n                        id=\"number\"\n                        label=\"Phone Number\"\n                    name=\"number\"\n                    size=\"small\"\n                    \n                        />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 2, mb: 2 }}\n                        size=\"medium\">\n                    {operation === 'add' ? <AddLoader/> : <>Add contact</>}\n                    </Button>\n                </Box>\n            </Container>\n    );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Container, TextField, Typography } from '@mui/material';\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const handleChangeFilter = (e) => {\n        dispatch(updateFilter(e.currentTarget.value))\n    };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography sx={{ mb: 1 }}\n                fontSize='22px'\n                color='#212121'\n                paragraph\n            >\n                Find contacts by name:\n            </Typography>\n            <TextField\n                sx={{ my: 0.5 }}\n                margin=\"normal\"\n                fullWidth\n                name=\"filter\"\n                value={filter}\n                size=\"small\"\n                onChange={handleChangeFilter}/>\n        </Container>\n    );\n};","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { RemoveLoader } from 'components/Loader';\n\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const operation = useSelector(selectIsLoading);\n\n    const handleDelete = async () => {\n        try {\n            await dispatch(deleteContact(id)).unwrap();\n            toast.success(`${name} was deleted from contacts`)\n        } catch (error) {\n            console.log(error)\n        } \n    };\n\n\n    return (\n        <>\n            <Grid container sx={{ mb: {xs:4,sm:4, md:1} }} spacing={1}\n                columns={{xs:12,sm:12, md:16}} >\n\n                    <Grid item xs={12} sm={6} md={6} >\n                        <Typography\n                        paragraph\n                        sx={{\n                        fontSize: {\n                            xs: '16px',\n                            sm: '18px',\n                            },\n                            textAlign: {\n                                xs: 'center',\n                                md: 'left'\n                            }\n                        }} \n                        fontWeight='500'\n                        color='#212121'\n                    >\n                        {name}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={6} >\n                        <Typography \n                        sx={{\n                        fontSize: {\n                            xs: '16px',\n                            sm: '18px',\n                            },\n                            textAlign: {\n                                xs: 'center',\n                                md: 'left'\n                            }\n                        }}\n                        color='#757575'\n                        paragraph\n                        >\n                        {number}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={6}  md>\n                        <Button\n                        type=\"button\"\n                        variant=\"outlined\"\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        color=\"primary\"\n                        startIcon={operation === id ? <RemoveLoader /> : <DeleteIcon/>}\n                        onClick={handleDelete}>\n                        {operation === id ? 'Deleting...' : 'Delete'}\n                        </Button>\n                    </Grid>\n\n            </Grid>\n        </>\n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};","import { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Container } from '@mui/material';\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n            <Container maxWidth=\"md\" sx={{ p: 4, mt: 4,\n                bgcolor: '#ffffff',\n                borderRadius: '10px',\n                boxShadow: 3,}} component='ul'>\n                {visibleContacts.map(({ id, name, number }) => (\n                <ContactItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                />\n            ))}\n            </Container>\n    );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { MainLoader } from 'components/Loader';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Container, Typography } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nconst Contacts = () => {\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const operation = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"md\"\n      sx={{\n        marginTop: 3,\n        marginBottom: 3,\n        minHeight: '80vh',\n        textAlign: 'center',\n      }}\n    >\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Typography\n        sx={{ mb: 3 }}\n        variant=\"h1\"\n        fontSize=\"44px\"\n        fontWeight=\"700\"\n        gutterBottom\n      >\n        Phonebook\n      </Typography>\n\n      <ContactForm />\n\n      <Typography\n        sx={{ mb: 3 }}\n        variant=\"h2\"\n        fontSize=\"34px\"\n        fontWeight=\"500\"\n        gutterBottom\n      >\n        Contacts\n      </Typography>\n\n      <Filter />\n\n      {operation === 'fetch' && !error && <MainLoader />}\n      {visibleContacts.length === 0 ? (\n        <Typography\n          sx={{ my: 2 }}\n          fontSize=\"18px\"\n          color=\"#212121\"\n          fontWeight=\"700\"\n          paragraph\n          align=\"center\"\n        >\n          Contact list is empty\n        </Typography>\n      ) : (\n        <ContactList />\n      )}\n    </Container>\n  );\n};\n\nexport default Contacts;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizeFilter","toLowerCase","contact","name","includes","sort","a","b","localeCompare","ContactForm","dispatch","useDispatch","useSelector","operation","handleSubmit","e","preventDefault","form","currentTarget","elements","value","number","some","toast","addContact","unwrap","reset","console","log","Container","maxWidth","sx","p","mb","bgcolor","borderRadius","boxShadow","Box","component","autoComplete","noValidate","onSubmit","TextField","margin","required","fullWidth","id","label","size","type","Button","variant","mt","Filter","Typography","fontSize","color","paragraph","my","onChange","updateFilter","ContactItem","handleDelete","deleteContact","Grid","container","xs","sm","md","spacing","columns","item","textAlign","fontWeight","startIcon","Delete","onClick","ContactList","visibleContacts","map","useEffect","fetchContacts","marginTop","marginBottom","minHeight","Helmet","gutterBottom","length","align","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}